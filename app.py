# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yLdWLkPU4jgBIzJgzXOsqWY7cdoZ19YK
"""

import streamlit as st
import pandas as pd
import pickle
import matplotlib.pyplot as plt
import statsmodels.api as sm

# --------- STREAMLIT APP TITLE ----------
st.title("Tesla Stock Price Forecasting with SARIMA (Minimal Model)")

# --------- LOAD DATA ----------
@st.cache_data
def load_data():
    df = pd.read_csv("TSLA.csv", parse_dates=["Date"], index_col="Date")
    return df

data = load_data()

# --------- LOAD MINIMAL SARIMA MODEL ----------
@st.cache_resource
def load_model():
    with open("sarima_tesla.pkl", "rb") as f:
        minimal_model = pickle.load(f)
    return minimal_model

minimal_sarima = load_model()

# --------- FORECAST FUNCTION ----------
def forecast_days(days):
    # Rebuild SARIMA model from minimal pickle
    sarima_model = sm.tsa.SARIMAX(
        data["Close"],
        order=minimal_sarima["order"],
        seasonal_order=minimal_sarima["seasonal_order"],
        enforce_stationarity=False,
        enforce_invertibility=False
    )
    # Apply stored parameters
    sarima_model_fit = sarima_model.filter(minimal_sarima["params"])
    forecast_res = sarima_model_fit.get_forecast(steps=days)
    forecast_df = forecast_res.summary_frame()
    return forecast_df

# --------- SIDEBAR SETTINGS ----------
st.sidebar.header("Forecast Settings")
forecast_period = st.sidebar.selectbox(
    "Select forecast period (days):",
    [30, 60, 90],
    index=1
)

# --------- PERFORM FORECAST ----------
forecast_df = forecast_days(forecast_period)

# --------- PLOT ----------
fig, ax = plt.subplots(figsize=(10, 6))
ax.plot(data.index, data["Close"], label="Historical", color="blue")

forecast_index = pd.date_range(
    start=data.index[-1] + pd.Timedelta(days=1),
    periods=forecast_period,
    freq="B"
)

ax.plot(forecast_index, forecast_df["mean"], label="Forecast", color="orange")
ax.fill_between(
    forecast_index,
    forecast_df["mean_ci_lower"],
    forecast_df["mean_ci_upper"],
    color="orange",
    alpha=0.3,
    label="Confidence Interval"
)

ax.set_title(f"{forecast_period}-Day Tesla Price Forecast using SARIMA")
ax.set_xlabel("Date")
ax.set_ylabel("Price")
ax.legend()

st.pyplot(fig)

# --------- SHOW FORECAST TABLE ----------
st.subheader(f"Forecast for next {forecast_period} days")
st.dataframe(forecast_df)